# Pre-commit hooks configuration
# Run `pre-commit install` to install the hooks
# Run `pre-commit run --all-files` to run all hooks on all files

repos:
  # General pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-yaml
        name: Check YAML syntax
      - id: check-json
        name: Check JSON syntax
      - id: check-toml
        name: Check TOML syntax
      - id: end-of-file-fixer
        name: Fix end of files
      - id: trailing-whitespace
        name: Trim trailing whitespace
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-added-large-files
        name: Check for large files (>500KB)
        args: ['--maxkb=500']
      - id: check-case-conflict
        name: Check for case conflicts
      - id: mixed-line-ending
        name: Check mixed line endings
        args: ['--fix=lf']

  # Python-specific hooks
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        name: Format code with Black
        language_version: python3.12
        args: ['--line-length=100', '--target-version=py312']

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: Sort imports with isort
        args: ['--profile=black', '--line-length=100']

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        name: Lint with ruff
        args: ['--fix', '--exit-non-zero-on-fix']

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        name: Security check with bandit
        args: ['-r', '-x', 'tests/', '--skip', 'B101,B601']
        exclude: ^(tests/|venv/)

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        name: Static type checking with mypy
        additional_dependencies: [
          'types-PyYAML',
          'types-requests',
          'pydantic',
          'click',
          'rich'
        ]
        args: ['--ignore-missing-imports', '--python-version=3.12']
        exclude: ^(tests/|examples/|venv/)

  # Docstring coverage (disabled due to Python 3.13 compatibility issues)
  # - repo: https://github.com/econchick/interrogate
  #   rev: 1.5.0
  #   hooks:
  #     - id: interrogate
  #       name: Check docstring coverage
  #       args: ['--verbose', '--fail-under=80', '--ignore-init-method', '--ignore-magic', '--ignore-module']
  #       exclude: ^(tests/|venv/)

  # Additional Python quality checks
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        name: Additional linting with flake8
        args: ['--max-line-length=100', '--extend-ignore=E203,W503,E501']
        exclude: ^(tests/|venv/)

  # Documentation checks
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        name: Check docstring style
        args: ['--convention=google', '--add-ignore=D100,D104']
        exclude: ^(tests/|examples/|venv/)

# Configuration for specific tools
default_language_version:
  python: python3.12

# Exclude patterns
exclude: |
  (?x)^(
      venv/|
      \.venv/|
      build/|
      dist/|
      \.git/|
      \.pytest_cache/|
      __pycache__/|
      .*\.egg-info/|
      htmlcov/
  )$
